import socket
import time
import threading
import os
import logging

logger = logging.getLogger(__name__)
FORMAT = '%(asctime)s %(name)-15.5s %(threadName)-10s %(levelname)-8s %(message)s'
logging.basicConfig(level=logging.INFO, format=FORMAT)
list_of_ips = set()


def pong(ip_address, port):
    while True:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.bind((ip_address, port))
        sock.listen(100)
        connection, client_address = sock.accept()
        try:
            # logger.info('connection from', client_address)
            data = connection.recv(16)
            logger.info('received "%s"' % data.decode())
            if data:
                # logger.info('sending data back to the client')
                connection.sendall(b'Pong')
            else:
                break

        finally:
            # logger.info('Cleanup')
            connection.close()


def ping(ip_address, port):
    while True:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        try:
            # Connect the socket to the server's address and port
            server_address = (ip_address, port)
            # logger.info('connecting to %s port %s' % server_address)
            sock.connect(server_address)

            # Send data
            message = b"PING"
            # logger.info('sending "%s"' % message)
            sock.sendall(message)

            data = sock.recv(16)
            logger.info('received "%s"' % data.decode())

        except Exception as e:
            logger.info(e)

        finally:
            # logger.info('closing socket')
            sock.close()


def connect_to_server():
    logger.info("Connection to Server Thread")
    s = socket.socket()
    host = '192.168.0.19'
    port2 = 9992
    s.connect((host, port2))

    while True:
        data = s.recv(1024)
        if data[:2].decode("utf-8") == 'cd':
            os.chdir(data[3:].decode("utf-8"))

        if len(data) > 0:
            data = str(data.decode("utf-8"))
            ips = data.strip().split()
            if len(ips) > 0:
                for ip in ips:
                    list_of_ips.add(ip)
            logger.info(f'Current list of ips: {list(list_of_ips)}')
            time.sleep(15)


if __name__ == '__main__':
    conn_thread = threading.Thread(target=connect_to_server)
    port1 = 9998
    conn_thread.start()
    time.sleep(60)
    logger.info(f'spawning before')
    for ip in list_of_ips:
        ping_thread = threading.Thread(target=ping, args=(ip, port1))
        pong_thread = threading.Thread(target=pong, args=(ip, port1))
        ping_thread.start()
        pong_thread.start()
